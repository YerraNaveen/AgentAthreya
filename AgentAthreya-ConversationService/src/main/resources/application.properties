spring.application.name=AgentAthreya-ConversationService
server.port=8081
#spring.profiles.active=docker

# Enable logging to file
logging.file.name=logs/app.log
logging.level.root=INFO
logging.level.com.agentathreya=DEBUG


spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Optional for testing, disables schema.sql/data.sql
spring.sql.init.mode=never
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.group-id=agentathreya-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# JWT Secret Key (Keep this secure in production!)
jwt.secret=${JWT_SECRET}

# JWT Expiration Time (in milliseconds) - Example: 1 hour (36000 00 ms)
jwt.expiration=360000

# Enable OpenAPI documentation
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# Customize API Docs Path (Optional)
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

llm.api.url=${LLM_API_URL}
llm.api.key=${OPENAI_API_KEY}
